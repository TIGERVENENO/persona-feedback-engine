# ============================================================================
# Persona Feedback Engine - Environment Variables Configuration
# ============================================================================
# Copy this file to .env and update the values for your local environment.
#
# Command to create .env from this template:
#   cp .env.example .env
#
# Then edit .env with your actual credentials and API keys.
# ============================================================================

# ======== Spring Profile ========
# Profile to use: 'docker' for Docker environment, 'dev' for local development
SPRING_PROFILES_ACTIVE=docker

# ======== PostgreSQL Database Configuration ========
# Database name for the application
POSTGRES_DB=personadb

# PostgreSQL user with create/drop permissions
POSTGRES_USER=postgres

# PostgreSQL password (change this in production!)
# Must be 8+ characters for production
POSTGRES_PASSWORD=postgres

# ======== RabbitMQ Configuration ========
# Default RabbitMQ user
RABBITMQ_USER=guest

# Default RabbitMQ password (change this in production!)
RABBITMQ_PASSWORD=guest

# Virtual host for RabbitMQ (default is /)
RABBITMQ_VHOST=/

# ======== Redis Configuration ========
# Redis password for authentication (change this in production!)
# Must be strong for production environments
REDIS_PASSWORD=redispass

# ======== OpenRouter API Configuration ========
# Your OpenRouter API key for Claude integration
# Get this from: https://openrouter.ai/keys
# IMPORTANT: Keep this secure and never commit to version control!
#
# To obtain an API key:
# 1. Go to https://openrouter.ai
# 2. Sign up or log in
# 3. Navigate to Keys section
# 4. Create a new API key
# 5. Copy it below
#
# Example format: sk-or-v1-1234567890abcdef...
OPENROUTER_API_KEY=your_openrouter_api_key_here_replace_me

# ======== Optional: Additional Configuration ========
# These can be left as defaults for most cases

# Maximum products per feedback session (default: 5)
# FEEDBACK_MAX_PRODUCTS=5

# Maximum personas per feedback session (default: 5)
# FEEDBACK_MAX_PERSONAS=5

# Maximum prompt length in characters (default: 2000)
# FEEDBACK_MAX_PROMPT_LENGTH=2000

# OpenRouter model to use (default: anthropic/claude-3-5-sonnet)
# OPENROUTER_MODEL=anthropic/claude-3-5-sonnet

# HTTP request timeout in seconds (default: 30)
# OPENROUTER_TIMEOUT=30

# ============================================================================
# Security Notes
# ============================================================================
# IMPORTANT: For Production Use
# 1. Always use strong passwords (20+ characters)
# 2. Use unique credentials different from example values
# 3. Rotate API keys regularly
# 4. Never commit .env file to version control
# 5. Use secrets management systems (Vault, AWS Secrets Manager, etc.)
# 6. Enable SSL/TLS for all services
# 7. Implement proper authentication and authorization
# 8. Monitor and audit all access
#
# For Local Development
# 1. Example credentials are acceptable for development only
# 2. Use a strong API key for OpenRouter (can be same as production key for testing)
# 3. Keep .env.example committed, but add .env to .gitignore
# 4. Each developer should have their own .env with personal API key
# ============================================================================

# ============================================================================
# Quick Start Guide
# ============================================================================
# 1. Create .env file:
#    cp .env.example .env
#
# 2. Edit .env and set OPENROUTER_API_KEY to your actual key
#
# 3. Start Docker services:
#    docker-compose up -d
#
# 4. Build Spring Boot application:
#    mvn clean package
#
# 5. Run Spring Boot application:
#    mvn spring-boot:run -Dspring-boot.run.arguments="--spring.profiles.active=docker"
#
# 6. Application is available at: http://localhost:8080
#
# 7. RabbitMQ Management UI: http://localhost:15672
#    - Username: guest
#    - Password: guest (from .env)
#
# 8. PostgreSQL is available at:
#    - Host: localhost
#    - Port: 5432
#    - Database: personadb
#    - Username: postgres
#    - Password: postgres (from .env)
# ============================================================================
