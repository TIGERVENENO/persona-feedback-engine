# ============================================================================
# Persona Feedback Engine - Docker Profile Configuration
# ============================================================================
# This configuration profile is used when running the application in Docker.
# It overrides the default application.properties and uses Docker service names
# for all external service connections.
#
# To use this profile:
# - Set environment variable: SPRING_PROFILES_ACTIVE=docker
# - Or pass as JVM argument: -Dspring.profiles.active=docker
# ============================================================================

spring.application.name=persona-feedback-engine

# ======== PostgreSQL Database Configuration ========
# Uses Docker service name 'postgres' instead of localhost
spring.datasource.url=jdbc:postgresql://postgres:5432/${POSTGRES_DB:personadb}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Database initialization strategy
# validate: only validate schema matches entities
# update: automatically update schema from entities (safe for development)
# create-drop: for testing only
spring.jpa.hibernate.ddl-auto=validate

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Run data.sql on startup to load test data
spring.sql.init.mode=always

# ======== RabbitMQ Configuration ========
# Uses Docker service name 'rabbitmq' instead of localhost
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=${RABBITMQ_USER:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}
spring.rabbitmq.virtual-host=${RABBITMQ_VHOST:/}

# Connection settings for reliability
spring.rabbitmq.connection-timeout=10000
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=1000
spring.rabbitmq.listener.simple.retry.max-interval=10000
spring.rabbitmq.listener.simple.retry.multiplier=2.0

# ======== Redis Configuration ========
# Uses Docker service name 'redis' instead of localhost
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.password=${REDIS_PASSWORD:redispass}
spring.data.redis.timeout=2000

# ======== Cache Configuration ========
# Redis as cache manager with 24-hour TTL
spring.cache.type=redis
spring.cache.redis.time-to-live=86400000

# ======== AI Provider Configuration ========
# Which provider to use: 'openrouter' or 'agentrouter'
app.ai.provider=${AI_PROVIDER:agentrouter}

# ======== OpenRouter API Configuration ========
# These should be provided via environment variables
app.openrouter.api-key=${OPENROUTER_API_KEY:}
app.openrouter.model=${OPENROUTER_MODEL}
app.openrouter.timeout-seconds=30
app.openrouter.retry-delay-ms=1000

# ======== AgentRouter API Configuration ========
# These should be provided via environment variables
app.agentrouter.api-key=${AGENTROUTER_API_KEY:}
app.agentrouter.model=${AGENTROUTER_MODEL}
app.agentrouter.timeout-seconds=30
app.agentrouter.retry-delay-ms=1000

# ======== AI Service Retry Configuration ========
app.ai.max-retries=${AI_MAX_RETRIES:3}
app.ai.retry-backoff-multiplier=${AI_RETRY_BACKOFF_MULTIPLIER:2}

# ======== Application-Specific Configuration ========
app.feedback.max-products-per-session=5
app.feedback.max-personas-per-session=5
app.feedback.max-prompt-length=2000

# ======== Logging Configuration ========
# Increased verbosity for Docker environment monitoring
logging.level.root=INFO
logging.level.ru.tigran.personafeedbackengine=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.amqp=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# ======== Server Configuration ========
server.port=8080
server.servlet.context-path=/

# ============================================================================
# Environment Variables Expected
# ============================================================================
# The following environment variables should be set in the .env file:
#
# POSTGRES_DB=personadb
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=postgres
#
# RABBITMQ_USER=guest
# RABBITMQ_PASSWORD=guest
# RABBITMQ_VHOST=/
#
# REDIS_PASSWORD=redispass
#
# AI_PROVIDER=agentrouter (or openrouter)
# OPENROUTER_API_KEY=your_openrouter_api_key (if using openrouter)
# OPENROUTER_MODEL=anthropic/claude-3-5-sonnet (optional, defaults to this)
# AGENTROUTER_API_KEY=your_agentrouter_api_key (if using agentrouter)
# AGENTROUTER_MODEL=anthropic/claude-3-5-sonnet (optional, defaults to this)
#
# SPRING_PROFILES_ACTIVE=docker
# ============================================================================
