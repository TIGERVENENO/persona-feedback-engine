# ============================================================================
# Persona Feedback Engine - Local Development Configuration Template
# ============================================================================
# This is a TEMPLATE file. Copy it to application-dev.properties and fill in your values.
#
# Instructions:
# 1. cp src/main/resources/application-dev.properties.example src/main/resources/application-dev.properties
# 2. Edit application-dev.properties with your local configuration
# 3. Run: mvn spring-boot:run -Dspring-boot.run.arguments="--spring.profiles.active=dev"
#
# DO NOT commit application-dev.properties to version control!
# It contains sensitive API keys and credentials.
# ============================================================================

# ======== PostgreSQL Database Configuration ========
spring.datasource.url=jdbc:postgresql://localhost:5432/personadb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# ======== Hibernate/JPA Configuration ========
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# ======== Flyway Configuration ========
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# ======== RabbitMQ Configuration ========
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# ======== Redis Configuration ========
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=redispass

# ======== Cache Configuration ========
spring.cache.type=redis
spring.cache.redis.time-to-live=86400000

# ======== AI Provider Configuration ========
# Choose: 'openrouter' or 'agentrouter'
app.ai.provider=openrouter

# ======== OpenRouter API Configuration ========
# Get your API key from: https://openrouter.ai/keys
app.openrouter.api-key=YOUR_OPENROUTER_API_KEY_HERE
app.openrouter.model=deepseek/deepseek-r1-0528:free
app.openrouter.timeout-seconds=30
app.openrouter.retry-delay-ms=1000

# ======== AgentRouter API Configuration ========
# Get your API key from: https://agentrouter.ai/keys
app.agentrouter.api-key=YOUR_AGENTROUTER_API_KEY_HERE
app.agentrouter.model=deepseek/deepseek-v3.1
app.agentrouter.timeout-seconds=30
app.agentrouter.retry-delay-ms=1000

# ======== AI Service Retry Configuration ========
app.ai.max-retries=3
app.ai.retry-backoff-multiplier=2

# ======== HikariCP Connection Pool Configuration ========
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=true

# ======== RabbitMQ Performance Configuration ========
spring.rabbitmq.listener.simple.prefetch=10
spring.rabbitmq.listener.simple.concurrency=3
spring.rabbitmq.listener.simple.max-concurrency=10

# ======== Application-Specific Configuration ========
app.feedback.max-products-per-session=5
app.feedback.max-personas-per-session=5
app.feedback.max-prompt-length=2000

# ======== Actuator and Prometheus Configuration ========
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.metrics.export.prometheus.enabled=true
management.endpoint.prometheus.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# ======== Resilience4j CircuitBreaker Configuration ========
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50.0
resilience4j.circuitbreaker.configs.default.slowCallRateThreshold=50.0
resilience4j.circuitbreaker.configs.default.slowCallDurationThreshold=30000
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=20000
resilience4j.circuitbreaker.configs.default.recordExceptions=java.io.IOException,ru.tigran.personafeedbackengine.exception.AIGatewayException
resilience4j.circuitbreaker.instances.aiProvider.baseConfig=default

# ======== Graceful Shutdown Configuration ========
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# ======== CORS Configuration ========
cors.allowed-origins=http://localhost:3000,http://localhost:8080,http://localhost:5173

# ======== JWT Configuration ========
# IMPORTANT: Use a strong random key for production
# Generate: openssl rand -base64 32
app.jwt.secret-key=dev-secret-key-for-local-development-only
app.jwt.expiration-hours=24

# ======== Springdoc OpenAPI (Swagger UI) Configuration ========
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.syntax-highlight=highlight-js

# ======== Logging Configuration ========
logging.level.root=INFO
logging.level.ru.tigran.personafeedbackengine=DEBUG
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework.security=INFO
